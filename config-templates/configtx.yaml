---
################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererMSP

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: ordererOrganizations/rails.rzd/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: ImplicitMeta
                Rule: "ANY Readers"
            Writers:
                Type: ImplicitMeta
                Rule: "ANY Writers"
            Admins:
                Type: ImplicitMeta
                Rule: "ANY Admins"

        OrdererEndpoints:
            - orderer.rzd.rails.rzd:7050
            - orderer.rzd2.rails.rzd:7050

    - &rzd
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: rzdMSP
        # ID to load the MSP definition as
        ID: rzdMSP
        MSPDir: peerOrganizations/rzd.rails.rzd/msp
        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
#        Policies:
#            Readers:
#                Type: Signature
#                Rule: "OR('rzdMSP.admin', 'rzdMSP.peer', 'rzdMSP.client')"
#            Writers:
#                Type: Signature
#                Rule: "OR('rzdMSP.admin', 'rzdMSP.client')"
#            Admins:
#                Type: Signature
#                Rule: "OR('rzdMSP.admin')"
        Policies:
            Readers:
                Type: ImplicitMeta
                Rule: "ANY Readers"
            Writers:
                Type: ImplicitMeta
                Rule: "ANY Writers"
            Admins:
                Type: ImplicitMeta
                Rule: "ANY Admins"
            Endorsement:
                Type: ImplicitMeta
                Rule: "ANY Endorsement"

        AnchorPeers:
            - Host: peer0.rzd.rails.rzd
              Port: 7051
    - &rzd2
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: rzd2MSP
        # ID to load the MSP definition as
        ID: rzd2MSP
        MSPDir: peerOrganizations/rzd2.rails.rzd/msp
        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
#        Policies:
#            Readers:
#                Type: Signature
#                Rule: "OR('rzd2MSP.admin', 'rzd2MSP.peer', 'rzd2MSP.client')"
#            Writers:
#                Type: Signature
#                Rule: "OR('rzd2MSP.admin', 'rzd2MSP.client')"
#            Admins:
#                Type: Signature
#                Rule: "OR('rzd2MSP.admin')"
        Policies:
            Readers:
                Type: ImplicitMeta
                Rule: "ANY Readers"
            Writers:
                Type: ImplicitMeta
                Rule: "ANY Writers"
            Admins:
                Type: ImplicitMeta
                Rule: "ANY Admins"
            Endorsement:
                Type: ImplicitMeta
                Rule: "ANY Endorsement"

        AnchorPeers:
            - Host: peer0.rzd2.rails.rzd
              Port: 7051
#    - &rzd3
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
#        Name: rzd3MSP
        # ID to load the MSP definition as
#        ID: rzd3MSP
#        MSPDir: peerOrganizations/rzd3.rails.rzd/msp
        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
#        Policies:
#            Readers:
#                Type: Signature
#                Rule: "OR('rzd3MSP.admin', 'rzd3MSP.peer', 'rzd3MSP.client')"
#            Writers:
#                Type: Signature
#                Rule: "OR('rzd3MSP.admin', 'rzd3MSP.client')"
#            Admins:
#                Type: Signature
#                Rule: "OR('rzd3MSP.admin')"
#        Policies:
#            Readers:
#                Type: Signature
#                Rule: "OR('rzd3MSP.member')"
#            Writers:
#                Type: Signature
#                Rule: "OR('rzd3MSP.member')"
#            Admins:
#                Type: Signature
#                Rule: "OR('rzd3MSP.admin')"
#            Endorsement:
#                Type: Signature
#                Rule: "OR('rzd3MSP.member')"

#        AnchorPeers:
#            - Host: peer0.rzd3.rails.rzd
#              Port: 7051

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V2_0 capability ensures that orderers and peers behave according
        # to v2.0 channel capabilities. Orderers and peers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 capability.
        # Prior to enabling V2.0 channel capabilities, ensure that all
        # orderers and peers on a channel are at v2.0.0 or later.
        V2_0: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V2_0 orderer capability ensures that orderers behave according
        # to v2.0 orderer capabilities. Orderers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 orderer capability.
        # Prior to enabling V2.0 orderer capabilities, ensure that all
        # orderers on channel are at v2.0.0 or later.
        V2_0: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V2_0 application capability ensures that peers behave according
        # to v2.0 application capabilities. Peers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 application capability.
        # Prior to enabling V2.0 application capabilities, ensure that all
        # peers on channel are at v2.0.0 or later.
        V2_0: true

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations lists the orgs participating on the application side of the
    # network.
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies: &ApplicationDefaultPolicies
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "ANY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "ANY Endorsement"
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

    Capabilities:
        <<: *ApplicationCapabilities

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    OrdererType: etcdraft
    EtcdRaft:
        Consenters:
            - Host: orderer.rzd.rails.rzd
              Port: 7050
              ClientTLSCert: ordererOrganizations/rails.rzd/orderers/orderer.rzd.rails.rzd/tls/server.crt
              ServerTLSCert: ordererOrganizations/rails.rzd/orderers/orderer.rzd.rails.rzd/tls/server.crt
            - Host: orderer.rzd2.rails.rzd
              Port: 7050
              ClientTLSCert: ordererOrganizations/rails.rzd/orderers/orderer.rzd2.rails.rzd/tls/server.crt
              ServerTLSCert: ordererOrganizations/rails.rzd/orderers/orderer.rzd2.rails.rzd/tls/server.crt
#            - Host: orderer3.rails.rzd
#              Port: 7050
#              ClientTLSCert: ordererOrganizations/rails.rzd/orderers/orderer3.rails.rzd/tls/server.crt
#              ServerTLSCert: ordererOrganizations/rails.rzd/orderers/orderer3.rails.rzd/tls/server.crt
    Addresses:
        - orderer.rzd.rails.rzd:7050
        - orderer.rzd2.rails.rzd:7050
#        - orderer3.rails.rzd:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    OrdererGenesisEtcdRaft:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Application:
            <<: *ApplicationDefaults
            Organizations:
              - *rzd
              - *rzd2
#              - *rzd3
            Capabilities:
                <<: *ApplicationCapabilities
